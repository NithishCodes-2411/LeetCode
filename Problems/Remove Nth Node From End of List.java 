/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        
        if(head==null) return null;
       
        ListNode temp = head;
        int len = 0;
        while(temp!=null)
        {
            temp = temp.next;
            len++;
        }
        System.out.println(len + "----");
        n = len - n;
        System.out.println(n + "-----");
        temp = head;
        ListNode prev = null;
        int i=0;

       
        if(i==n) head = head.next;

        while(temp!=null){
            
            if(i==n && prev  != null){
                
                prev.next = temp.next;
                break;
            }
            prev = temp ;
            temp = temp.next;
            i++;

        }
        return head;

     






     

        
 
        
        
    }
}